# main.py

import asyncio
from aportals.aportals_handler import init_aportals
from aportals.search_logic import search_gifts_by_filter
from db.db import get_db, engine
from db.models import Base
from db.filters_service import save_filter


async def main():
    # üîß –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)

    # ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    auth = await init_aportals()
    if not auth:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.")
        return

    # üßæ –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    print("\nüîç –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞:")
    collection = input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞ (collection): ").strip()
    model = input("–ú–æ–¥–µ–ª—å (model): ").strip()
    backdrop = input("–§–æ–Ω (backdrop): ").strip()
    price_limit = float(input("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (TON): ").strip())

    filter_data = {
        "collection": collection,
        "model": model,
        "backdrop": backdrop,
        "symbol": None,
        "price_limit": price_limit
    }

    # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ –ë–î
    async for session in get_db():
        saved = await save_filter(session, filter_data)
        print(f"\n‚úÖ –§–∏–ª—å—Ç—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å ID: {saved.id}")

    # üîç –ü–æ–∏—Å–∫ –ø–æ —Ñ–∏–ª—å—Ç—Ä—É
    gifts = await search_gifts_by_filter(
        collection=collection,
        model=model,
        backdrop=backdrop,
        price_limit=price_limit
    )

    # üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if not gifts:
        print("‚ùå –ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    for g in gifts:
        print(f"\nüéÅ {g['name']}")
        print(f"üí∞ –¶–µ–Ω–∞: {g['price']} TON")
        print(f"üìå ID: {g['id']}")
        print(f"{g['status']}")

if __name__ == "__main__":
    asyncio.run(main())