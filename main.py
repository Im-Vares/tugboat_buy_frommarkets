import asyncio
import sys
import os
from dotenv import load_dotenv
from loguru import logger

# –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from session import get_pyrogram_client
from bot.bot import start_bot  # bot/–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç—Å—é–¥–∞
from bot.states.aportals_fetcher import get_auth_data
from aportalsmp import filterFloors, collections
from shared.gift_cache import (
    cache_backdrops,
    get_cached_collections,
    cache_models_for_collection,
)

load_dotenv()


async def preload_backdrops_once():
    logger.info("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞ —Ñ–æ–Ω–æ–≤...")
    try:
        auth = await get_auth_data()
        filters = await filterFloors(gift_name="plushpepe", authData=auth)
        if filters and filters.backdrops:
            cache_backdrops(filters.backdrops)
            logger.success("‚úÖ –§–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ–Ω—ã")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–æ–Ω–æ–≤: {e}")


async def preload_some_collections(limit: int = 4):
    logger.info("üì¶ –ü–æ–¥–≥—Ä—É–∑–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤ –∫—ç—à...")
    try:
        auth = await get_auth_data()
        all_collections = await collections(authData=auth)
        cached = get_cached_collections()

        to_load = [
            c["short_name"] for c in all_collections._collections
            if c.get("short_name") and c["short_name"] not in cached
        ][:limit]

        for short_name in to_load:
            logger.info(f"‚û°Ô∏è –ö—ç—à–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {short_name}")
            filters = await filterFloors(gift_name=short_name, authData=auth)
            if filters:
                cache_models_for_collection(auth, short_name, filters.models)
            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–æ–¥–µ–ª–∏ –¥–ª—è: {short_name}")

        logger.success("‚úÖ –ü–µ—Ä–≤–∏—á–Ω–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {e}")


async def runner():
    await preload_backdrops_once()
    await preload_some_collections(limit=4)

    pyrogram_client = get_pyrogram_client()
    await pyrogram_client.start()
    try:
        await asyncio.gather(
            start_bot()
        )
    finally:
        await pyrogram_client.stop()


if __name__ == "__main__":
    asyncio.run(runner())