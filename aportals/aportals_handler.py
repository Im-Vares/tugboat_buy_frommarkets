# aportals/aportals_handler.py

import asyncio
from loguru import logger
from config import API_ID, API_HASH
from aportalsmp.auth import update_auth
from aportalsmp.account import myBalances

auth_data: str | None = None  # –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω

async def init_aportals():
    global auth_data

    logger.info("üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ aportalsmp...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º authData —Å—Ç—Ä–æ–∫—É
        auth_data = await update_auth(
            api_id=API_ID,
            api_hash=API_HASH,
        )
        logger.success("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ aportalsmp.")

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞
        balances = await myBalances(auth_data)
        logger.info(f"üí∞ –ë–∞–ª–∞–Ω—Å: {balances.balance}")
        logger.info(f"‚ùÑÔ∏è –ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ: {balances.frozen_funds}")

        return auth_data

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ aportalsmp: {e}")
        return None