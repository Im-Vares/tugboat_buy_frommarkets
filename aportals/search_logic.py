# aportals/search_logic.py

import asyncio
from loguru import logger
from aportalsmp.auth import update_auth
from aportalsmp.gifts import search
from config import API_ID, API_HASH

async def search_gifts_by_filter(collection: str, model: str, backdrop: str, price_limit: float):
    try:
        auth = await update_auth(API_ID, API_HASH)
        logger.info(f"üì° –ü–æ–∏—Å–∫ –ø–æ–¥–∞—Ä–∫–æ–≤: {collection} | {model} | {backdrop} | –¥–æ {price_limit} TON")

        results = await search(
            sort="price_asc",
            offset=0,
            limit=10,
            gift_name=collection,
            model=model,
            backdrop=backdrop,
            symbol=[],
            min_price=1,
            max_price=999999,
            authData=auth
        )

        if not results:
            logger.warning("‚ùå –ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return []

        matched = []
        for gift in results:
            match = {
                "id": gift.id,
                "name": gift.name,
                "price": gift.price,
                "status": "‚úÖ –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å" if gift.price <= price_limit else "‚ö†Ô∏è —Ü–µ–Ω–∞ –≤—ã—à–µ –ª–∏–º–∏—Ç–∞"
            }
            matched.append(match)

        return matched

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        return []